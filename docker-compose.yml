version: "3.8"

services:
  weaviate:
    image: cr.weaviate.io/semitechnologies/weaviate:1.31.0
    restart: on-failure
    ports:
    - 8080:8080
    - 50051:50051
    environment:
      QUERY_DEFAULTS_LIMIT: 20
      AUTHENTICATION_ANONYMOUS_ACCESS_ENABLED: 'true'
      PERSISTENCE_DATA_PATH: "/var/lib/weaviate"
      DEFAULT_VECTORIZER_MODULE: text2vec-transformers
      ENABLE_MODULES: text2vec-transformers
      TRANSFORMERS_INFERENCE_API: http://t2v-transformers:8080
      CLUSTER_HOSTNAME: 'node1'
    networks:
      - weaviate-net
    # depends_on:
    #   t2v-transformers:
    #     condition: service_healthy
    volumes:
      - weaviate_data:/var/lib/weaviate
  t2v-transformers:
    image: cr.weaviate.io/semitechnologies/transformers-inference:sentence-transformers-multi-qa-MiniLM-L6-cos-v1
    restart: unless-stopped
    environment:
      ENABLE_CUDA: 0
    # healthcheck:
    #   test: ["CMD", "wget", "--spider", "-q", "http://localhost:8080/.well-known/ready"]
    #   interval: 30s
    #   timeout: 10s
    #   retries: 10
    networks:
    - weaviate-net
  backend:
    env_file:
      - .env
    dns:
      - 8.8.8.8
      - 8.8.4.4
    build:
      context: .
      dockerfile: Dockerfile
    container_name: ccc_backend
    # command: uvicorn backend.main:app --host 0.0.0.0 --port 8000 --reload
    volumes:
      - ./backend:/app/backend
    ports:
      - "8000:8000"
    depends_on:
      - postgres
      - weaviate
    environment:
      - DATABASE_URL=postgresql+asyncpg://postgres:password@postgres:5432/yourdb
    networks:
      - weaviate-net

  postgres:
    image: postgres:14
    container_name: ccc_postgres
    restart: always
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: yourdb
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
    - weaviate-net


networks:
  weaviate-net:
    driver: bridge
  
volumes:
  postgres_data:
  weaviate_data:
